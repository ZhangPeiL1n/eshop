spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://192.168.8.3:3306/eshop?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = MyNewPass@123
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
mybatis.configuration.log-impl = org.apache.ibatis.logging.stdout.StdOutImpl
comment.picture.upload.dir = /upload/
comment.picture.upload.dir.type = relative
# 初始化大小
spring.datasource.druid.initial-size = 5
# 最小空闲
spring.datasource.druid.min-idle = 5
# 最大活跃
spring.datasource.druid.max-active = 20
# 最大等待
spring.datasource.druid.max-wait = 60000
# 检测空闲连接的间隔，毫秒
spring.datasource.druid.time-between-eviction-runs-millis = 60000
# 一个连接在连接池中最小生存的时间，毫秒
spring.datasource.druid.min-evictable-idle-time-millis = 300000
# 检测连接是否有效的查询语句
spring.datasource.druid.validation-query = SELECT 1 FROM DUAL
# 使用 validation-query 检测空闲连接
spring.datasource.druid.test-while-idle = true
# 申请连接时执行 validation-query，检查连接是否有效
spring.datasource.druid.test-on-borrow = false
# 归还连接时执行 validation-query，检查连接是否有效
spring.datasource.druid.test-on-return = false
# 是否缓存 preparedStatement，也就是 PSCache
spring.datasource.druid.pool-prepared-statements = true
# 每个连接缓存的语句数？
spring.datasource.druid.max-pool-prepared-statement-per-connection-size = 20
# 通过别名方式启动插件，监控统计用的 filter:stat，日志统计用的 filter:log4j，防御 sql 注入的 filter:wall
spring.datasource.druid.filter-class-names = stat,wall,log4j
spring.datasource.druid.connection-properties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 商品中心-品牌管理-图片上传配置
commodity.brand.image.upload.logo.path.type = relative
commodity.brand.image.upload.logo.path = static/images/upload/brand/logo
commodity.brand.image.upload.auth-voucher.path.type = relative
commodity.brand.image.upload.auth-voucher.path = static/images/upload/brand/logo
# 商品中心-商品管理-图片上传配置
commodity.goods.image.upload.picture.path.type = relative
commodity.goods.image.upload.picture.path = static/images/upload/goods/picture
commodity.goods.image.upload.detail.picture.path.type = relative
commodity.goods.image.upload.detail.picture.path = static/images/upload/goods/detail/picture